# Generated by Django 5.1.7 on 2025-04-17 21:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('admin_level', models.CharField(blank=True, max_length=50)),
                ('responsibilities', models.TextField(blank=True)),
                ('office_phone', models.CharField(blank=True, max_length=15)),
                ('emergency_contact', models.CharField(blank=True, max_length=15)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Profile',
                'verbose_name_plural': 'Admin Profiles',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_level', models.CharField(blank=True, max_length=50)),
                ('admission_year', models.PositiveIntegerField(blank=True, null=True)),
                ('roll_number', models.CharField(blank=True, max_length=50)),
                ('section', models.CharField(blank=True, max_length=20)),
                ('guardian_name', models.CharField(blank=True, max_length=100)),
                ('guardian_phone', models.CharField(blank=True, max_length=15)),
                ('guardian_email', models.EmailField(blank=True, max_length=254)),
                ('guardian_relationship', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('qualification', models.CharField(blank=True, max_length=200)),
                ('bio', models.TextField(blank=True)),
                ('join_date', models.DateField(blank=True, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=50)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('office_location', models.CharField(blank=True, max_length=100)),
                ('office_hours', models.CharField(blank=True, max_length=200)),
                ('alternate_email', models.EmailField(blank=True, max_length=254)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher Profile',
                'verbose_name_plural': 'Teacher Profiles',
            },
        ),
    ]
